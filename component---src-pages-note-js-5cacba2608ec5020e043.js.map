{"version":3,"file":"component---src-pages-note-js-5cacba2608ec5020e043.js","mappings":"2HAyBA,IAtBWA,IACP,MAAM,YAAEC,GAAgBD,EAOxB,OALAE,EAAAA,EAAAA,YAAU,KACNC,OAAOC,YAAcD,OAAOC,aAAe,GAC3CD,OAAOC,YAAYC,KAAK,CAAC,EAAE,GAC5B,CAACJ,IAIAK,EAAAA,cAAA,OACIC,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClB,iBAAe,0BACf,eAAa,aACb,iBAAe,QACf,iBAAe,cACjB,C,+CCoBV,IArCiBC,IAAa,IAAZ,KAACC,GAAKD,EAEpB,MAAME,EAAQD,EAAKE,YAAYD,MACzBE,EAAOH,EAAKE,YAAYC,KAAKC,KAAK,OAClCC,EAAOL,EAAKE,YAAYI,OACxBC,EAAOP,EAAKQ,gBAAgBC,QAAQ,KAAK,IAAIA,QAAQ,IAAI,IAAIC,MAAM,EAAG,IAAM,MAElF,SAASC,EAAWC,GAKhB,MAAO,EAJPA,EAAK,IAAIC,KAAKD,IACHE,eACF,MAAQF,EAAGG,WAAa,IAAIL,OAAO,IACnC,KAAOE,EAAGI,WAAWN,OAAO,GAEzC,CAGA,OACIf,EAAAA,cAAA,OAAKC,UAAU,sBACXD,EAAAA,cAAA,OAAKE,MAAO,CAAC,WAAc,aAAc,QAAW,SAChDF,EAAAA,cAAA,OAAKE,MAAO,CAAC,UAAa,WACtBF,EAAAA,cAAA,QAAMC,UAAU,aAAae,EAAWN,GAAM,IAC9CV,EAAAA,cAAA,WACAA,EAAAA,cAAA,QAAMC,UAAU,aAAae,EAAWN,GAAM,GAAG,IAAIM,EAAWN,GAAM,KAE1EV,EAAAA,cAAA,OAAKE,MAAO,CAAC,YAAe,WACxBF,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAE,SAAWjB,GACfN,EAAAA,cAAA,OAAKC,UAAU,YAAYO,GAC3BR,EAAAA,cAAA,OAAKC,UAAU,cAAcK,IAEjCN,EAAAA,cAAA,WACAA,EAAAA,cAAA,KAAGC,UAAU,aAAaW,KAGhC,C,+CCRd,IAxBkBY,KACd,MAAM,kBAACC,IAAqBC,EAAAA,EAAAA,gBAAeC,GAE3C,OACI3B,EAAAA,cAAA,WACKyB,EAAkBG,MAAMC,KAAIC,GAC3B9B,EAAAA,cAAA,KAAGC,UAAU,mBACXD,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAE,SAAWO,EAAIC,WAAU,IAAKC,IAAKF,EAAIC,YAC7C/B,EAAAA,cAAA,QAAME,MAAO,CAAC,SAAY,SAAU4B,EAAIC,YAAkB/B,EAAAA,cAAA,QAAME,MAAO,CAAC,SAAY,SAAS,IAAE4B,EAAIG,WAAW,SAKpHjC,EAAAA,cAAA,KAAGC,UAAU,mBACXD,EAAAA,cAACsB,EAAAA,KAAI,CAACC,GAAE,UACNvB,EAAAA,cAAA,QAAME,MAAO,CAAC,SAAY,SAAS,OAAUF,EAAAA,cAAA,QAAME,MAAO,CAAC,SAAY,SAAS,IAAEuB,EAAkBQ,WAAW,OAIhH,EAOR,MAAMN,EAAK,Y,8FC+BlB,UApDavB,IAAe,IAAd,KAAEC,GAAMD,EAEpB,MAAM8B,EAAc7B,EAAK6B,YAAYC,MAErC,OACEnC,EAAAA,cAACoC,EAAAA,EAAM,KACHpC,EAAAA,cAACqC,EAAAA,EAAG,CAACC,UAAU,SAEftC,EAAAA,cAAA,UAAI,QAEJA,EAAAA,cAACwB,EAAAA,EAAS,MAEVxB,EAAAA,cAAA,WACAA,EAAAA,cAACuC,EAAAA,EAAG,MACJvC,EAAAA,cAAA,WAEAA,EAAAA,cAAA,eACEA,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,OAAKC,UAAU,8BACZiC,EAAYL,KAAKW,GACdxC,EAAAA,cAACyC,EAAAA,EAAQ,CAACpC,KAAMmC,EAAKE,KAAMV,IAAKQ,EAAKE,KAAKC,UAM/C,C","sources":["webpack://web-gatsby/./src/components/googleAdsense.js","webpack://web-gatsby/./src/components/note_card.js","webpack://web-gatsby/./src/components/tags_group.js","webpack://web-gatsby/./src/pages/note.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n// import { css } from \"theme-ui\"\n\nconst Ad = props => {\n    const { currentPath } = props\n\n    useEffect(() => {\n        window.adsbygoogle = window.adsbygoogle || []\n        window.adsbygoogle.push({})\n    }, [currentPath])\n\n    return (\n\n        <ins\n            className=\"adsbygoogle\"\n            style={{ display: 'block' }}\n            data-ad-client=\"ca-pub-6815803998948370\"\n            data-ad-slot=\"5802022489\"\n            data-ad-format=\"fluid\"\n            data-ad-layout=\"in-article\"\n        />\n\n    )\n}\n\nexport default Ad;","import React from \"react\"\nimport { Link } from 'gatsby';\n\nconst NoteCard = ({data}) => {\n\n    const title = data.frontmatter.title\n    const tags = data.frontmatter.tags.join(' | ')\n    const date = data.frontmatter.update\n    const text = data.rawMarkdownBody.replace('\\n','').replace('#','').slice(0, 50) + '...'\n\n    function formatDate(dt) {\n        dt = new Date(dt)\n        var y = dt.getFullYear();\n        var m = ('00' + (dt.getMonth() + 1)).slice(-2);\n        var d = ('00' + dt.getDate()).slice(-2);\n        return [y, m, d];\n    }\n\n\n    return (\n        <div className=\"py-4 px-4 lg:w-1/2\">\n            <div style={{\"alignItems\": \"flex-start\", \"display\": \"flex\"}}>\n                <div style={{\"textAlign\": \"center\"}}> \n                    <span className=\"note-date\">{formatDate(date)[0]}</span>\n                    <hr/>\n                    <span className=\"note-date\">{formatDate(date)[1]+'/'+formatDate(date)[2]}</span>\n                </div>\n                <div style={{\"paddingLeft\": \"1.5rem\"}}>\n                    <Link to={`/note/${title}`}>\n                        <div className=\"note-tag\">{tags}</div>\n                        <div className=\"note-title\">{title}</div>\n                    </Link>\n                    <hr/>\n                    <p className=\"note-text\">{text}</p>\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default NoteCard\n\n\n\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\n\nconst TagsGroup = () => {\n    const {allMarkdownRemark} = useStaticQuery(query);\n\n    return (\n        <div>\n            {allMarkdownRemark.group.map(tag => (\n              <p className=\"tag-group-block\"> \n                <Link to={`/note/${tag.fieldValue}/`} key={tag.fieldValue}>\n                  <span style={{\"fontSize\": \"16px\"}}>{tag.fieldValue}</span><span style={{\"fontSize\": \"12px\"}}>({tag.totalCount})</span>\n                </Link>\n              </p>\n            ))} \n\n            <p className=\"tag-group-block\"> \n              <Link to={`/note/`}>\n                <span style={{\"fontSize\": \"16px\"}}>すべて</span><span style={{\"fontSize\": \"12px\"}}>({allMarkdownRemark.totalCount})</span>\n              </Link> \n            </p>\n\n        </div >\n\n    )\n}\n\nexport default TagsGroup\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark{\n      totalCount\n      group(field: { frontmatter: { tags: SELECT }}) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\n","import * as React from 'react';\nimport Layout from '../components/layout';\nimport TagsGroup from '../components/tags_group';\nimport { graphql } from 'gatsby';\nimport Seo from \"../components/seo\"\nimport NoteCard from \"../components/note_card\"\nimport GAd from '../components/googleAdsense';\n\n\nconst Note = ({ data }) => {\n\n  const postsRemark = data.postsRemark.edges\n\n  return (\n    <Layout>\n        <Seo pageTitle=\"Note\"/>\n\n        <h1>Note</h1>\n\n        <TagsGroup/>\n\n        <br/>\n        <GAd/>\n        <br/>\n\n        <section>\n          <div className=\"container mx-auto\">\n            <div className=\"flex flex-wrap -mx-4 -my-8\">\n              {postsRemark.map((edge) => (\n                  <NoteCard data={edge.node} key={edge.node.id}/>\n              ))}\n            </div>\n          </div>\n        </section>\n\n    </Layout>\n  );\n};\n\n\n\nexport const query = graphql`\n  query {\n    postsRemark: allMarkdownRemark\n    (sort: {frontmatter: {update: DESC}} )\n    {\n      edges {\n        node {\n          id\n          rawMarkdownBody\n          frontmatter {\n            title\n            tags\n            update\n          }\n        }        \n      }\n    }\n  }\n`;\n\nexport default Note;"],"names":["props","currentPath","useEffect","window","adsbygoogle","push","React","className","style","display","_ref","data","title","frontmatter","tags","join","date","update","text","rawMarkdownBody","replace","slice","formatDate","dt","Date","getFullYear","getMonth","getDate","Link","to","TagsGroup","allMarkdownRemark","useStaticQuery","query","group","map","tag","fieldValue","key","totalCount","postsRemark","edges","Layout","Seo","pageTitle","GAd","edge","NoteCard","node","id"],"sourceRoot":""}