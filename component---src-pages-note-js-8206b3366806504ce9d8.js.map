{"version":3,"file":"component---src-pages-note-js-8206b3366806504ce9d8.js","mappings":"0KAiFA,UA1EaA,IAAe,IAAd,KAAEC,GAAMD,EAEpB,MAAME,GAAcC,EAAAA,EAAAA,MACdC,EAAQH,EAAKI,kBAAkBD,MAErC,SAASE,EAAUC,GACjB,IAAIC,EAASD,EAAKE,KAAKC,iBACnBC,EAAWJ,EAAKE,KAAKG,YAAYC,MAErC,OADAL,EAASA,EAAOM,MAAM,MACR,GAAK,IAAMH,CAC3B,CAEA,OACEI,EAAAA,cAACC,EAAAA,EAAM,KACHD,EAAAA,cAACE,EAAAA,EAAG,CAACC,UAAU,SAEdhB,EAAYiB,OACTJ,EAAAA,cAAA,WACIA,EAAAA,cAAA,MAAIK,UAAU,gBAAe,QAC7BL,EAAAA,cAAA,UACCX,EAAMiB,KAAKd,GACRQ,EAAAA,cAAA,MAAIK,UAAU,mBAAmBE,IAAKf,EAAKE,KAAKc,IAC5CR,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAInB,EAAUC,IACpBQ,EAAAA,cAAA,WAAMR,EAAKE,KAAKG,YAAYC,aAM1C,KAEDX,EAAYwB,GACTX,EAAAA,cAAA,WACIA,EAAAA,cAAA,MAAIK,UAAU,YAAW,QACzBL,EAAAA,cAAA,UACCX,EAAMiB,KAAKd,GACRQ,EAAAA,cAAA,MAAIK,UAAU,eAAeE,IAAKf,EAAKE,KAAKc,IACxCR,EAAAA,cAACS,EAAAA,KAAI,CAACC,GAAInB,EAAUC,IACpBQ,EAAAA,cAAA,WAAMR,EAAKE,KAAKG,YAAYC,aAM1C,KAEG,C","sources":["webpack://web-gatsby/./src/pages/note.js"],"sourcesContent":["import * as React from 'react';\nimport Layout from '../components/layout';\nimport { graphql, Link } from 'gatsby';\nimport { useBreakpoint } from \"gatsby-plugin-breakpoints\"\nimport Seo from \"../components/seo\"\nimport \"../styles/markdown.css\"\n\nconst Blog = ({ data }) => {\n\n  const breakpoints = useBreakpoint();\n  const edges = data.allMarkdownRemark.edges\n\n  function make_link(edge) {\n    var parent = edge.node.fileAbsolutePath\n    var children = edge.node.frontmatter.title\n    parent = parent.split('/')\n    return parent[5] + '/' + children\n  }\n\n  return (\n    <Layout>\n        <Seo pageTitle=\"Note\"/>\n\n        {breakpoints.mobile ? \n            <div>\n                <h1 className=\"mobile-title\">Note</h1>\n                <ul>\n                {edges.map((edge) => (\n                    <li className=\"blog-list-mobile\" key={edge.node.id}>\n                        <Link to={make_link(edge)}>\n                        <div>{edge.node.frontmatter.title}</div>\n                        </Link>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        : null}\n\n        {breakpoints.pc ? \n            <div>\n                <h1 className=\"pc-title\">Note</h1>\n                <ul >\n                {edges.map((edge) => (\n                    <li className=\"blog-list-pc\" key={edge.node.id}>\n                        <Link to={make_link(edge)}>\n                        <div>{edge.node.frontmatter.title}</div>\n                        </Link>\n                    </li>\n                ))}\n                </ul>\n            </div>\n        : null}\n\n    </Layout>\n  );\n};\n\n\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark\n    (sort: { fileAbsolutePath: ASC } )\n    {\n      edges {\n        node {\n          id\n          html\n          timeToRead\n          frontmatter {\n            title\n            date\n            slug\n          }\n          fileAbsolutePath\n        }        \n      }\n    }\n  }\n`;\n\nexport default Blog;"],"names":["_ref","data","breakpoints","useBreakpoint","edges","allMarkdownRemark","make_link","edge","parent","node","fileAbsolutePath","children","frontmatter","title","split","React","Layout","Seo","pageTitle","mobile","className","map","key","id","Link","to","pc"],"sourceRoot":""}