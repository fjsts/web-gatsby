{"version":3,"file":"component---src-templates-race-predict-js-798442c532a50bc8b913.js","mappings":"4LAOe,SAASA,EAAK,GAAuB,IAAvB,YAAEC,EAAW,KAAEC,GAAK,EAC7C,MAAMC,EAAOF,EAAYG,KAAKD,KACxBE,EAAYJ,EAAYG,KAAKE,QAAU,KAAOL,EAAYG,KAAKG,gBAC/DC,EAAUP,EAAYG,KAAKI,QAEjC,OACI,gBAAC,IAAM,KACH,0BAAKL,EAAI,IAAGE,GASxB,SAAqBH,EAAMM,GACvB,IAAIC,EAAM,GACNC,EAAQ,EACRC,EAAa,EAEjBT,EAAKU,MAAMC,SAAQ,SAAUC,GACrBA,EAAKC,KAAKP,UAAYA,IACtBE,GAAgB,EAChBC,EAAaK,KAAKC,MAA+B,IAAzBH,EAAKC,KAAKG,cAAsB,IACxDT,EAAIU,KACJ,sBAAIC,IAAKN,EAAKC,KAAKM,IACf,sBAAIC,MAAM,OAAQR,EAAKC,KAAKQ,QAC5B,sBAAID,MAAM,MAAME,MAAM,QAAQV,EAAKC,KAAKU,YACxC,sBAAIH,MAAM,MAAME,MAAM,SAASb,KAI3C,IAGEF,EADY,IAAVC,EACI,qBAAGc,MAAM,UAAQ,aAGrB,yBAAOE,UAAU,WACf,6BACE,0BACE,gCACA,gCACA,mCAGJ,6BACGjB,IAKT,OAAOA,CACT,CA7CWkB,CAAYzB,EAAK0B,mBAAoBpB,GACtC,gBAAC,EAAAqB,KAAI,CAACC,GAAG,kBAAiB,wBAAMJ,UAAU,cAAY,SAGlE,C","sources":["webpack://web-gatsby/./src/templates/race_predict.js"],"sourcesContent":["import React from \"react\"\nimport \"../styles/race_predict.css\"\nimport Layout from \"../components/layout\";\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\n\n\nexport default function Post({ pageContext, data}) {\n    const area = pageContext.post.area;\n    const race_info = pageContext.post.race_no + 'R ' + pageContext.post.RaceData01_time;    \n    const race_id = pageContext.post.race_id;\n\n    return (\n        <Layout>            \n            <h2>{area} {race_info}</h2>\n\n            {getRaceData(data.allTodayPredictCsv, race_id)}\n            <Link to=\"/today_predict\"><span className=\"btn-return\">← 戻る</span></Link>\n        </Layout>\n    )\n}\n\n\nfunction getRaceData(data, race_id) {\n    let ret = [];\n    let count = 0;\n    let pred_value = 0\n  \n    data.edges.forEach(function (item) {\n        if (item.node.race_id === race_id) {\n            count = count + 1\n            pred_value = Math.round(item.node.y_pred_value * 100) / 100\n            ret.push(\n            <tr key={item.node.id}> \n                <td width=\"20%\" >{item.node.umaban}</td>\n                <td width=\"60%\" align=\"left\">{item.node.horse_name}</td>\n                <td width=\"20%\" align=\"right\">{pred_value}</td>\n            </tr>\n            )\n        }\n    })\n  \n    if (count === 0) {\n      ret = <p align=\"center\">データがありません</p>\n    } else {\n      ret = (\n        <table className=\"predict\">\n          <thead>\n            <tr>\n              <th>馬番</th>\n              <th>馬名</th>\n              <th>期待値</th>\n            </tr>\n          </thead>\n          <tbody>\n            {ret}\n          </tbody>\n        </table>\n      )\n    }\n    return ret;\n  }\n\nexport const pageQuery = graphql`\n  query {\n    allTodayPredictCsv{\n      edges {\n        node {\n          id\n          division\n          race_id\n          RaceData01_time\n          area\n          race_no\n          umaban\n          horse_name\n          y_pred_value\n        }\n      }\n    }\n}\n`"],"names":["Post","pageContext","data","area","post","race_info","race_no","RaceData01_time","race_id","ret","count","pred_value","edges","forEach","item","node","Math","round","y_pred_value","push","key","id","width","umaban","align","horse_name","className","getRaceData","allTodayPredictCsv","Link","to"],"sourceRoot":""}