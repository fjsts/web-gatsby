{"version":3,"file":"component---src-pages-today-predict-js-aa974fcb145ad421c4aa.js","mappings":"4LAKe,SAASA,EAAQC,GAAY,IAAX,KAAEC,GAAMD,EACrC,MAAME,EAAQ,kBAAqBD,EAAKE,QAAO,IACzCC,EAAOH,EAAKG,KACZC,EAAYJ,EAAKK,QAAS,KAAOL,EAAKM,gBAG5C,IAAIC,EAAO,GAOX,OATyBP,EAAKQ,aAIR,KAClBD,EAAO,MAKPE,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAIV,EAAUW,UAAU,oBAC1BH,EAAAA,cAAA,OAAKG,UAAU,aACXH,EAAAA,cAAA,OAAKG,UAAU,kBACXH,EAAAA,cAAA,UAAKF,EAAK,IAAEJ,EAAK,IAAEC,EAAU,IAAEG,EAAK,OAKxD,CCtBe,SAASM,EAAOd,GAAU,IAAT,KAACe,GAAKf,EAUpC,MAAMgB,GARcC,EAQK,IAAIC,MAP3BD,EAAK,IAAIC,KAAKD,IACHE,cAGC,KAFH,MAAQF,EAAGG,WAAa,IAAIC,OAAO,GAEtB,KADb,KAAOJ,EAAGK,WAAWD,OAAO,IAJvC,IAAoBJ,EAgBpB,OACEP,EAAAA,cAACa,EAAAA,EAAM,KACLb,EAAAA,cAAA,UAAI,SACDK,EAAKS,oBAAoBC,MAAMC,KAAIC,GAT1C,SAAmBA,GACjB,GAAIX,IAAUW,EAAKC,KAAKC,KACtB,OAAOnB,EAAAA,cAACX,EAAQ,CAAC+B,IAAKH,EAAKC,KAAKzB,QAASF,KAAM0B,EAAKC,MAExD,CAKkDG,CAAUJ,KAG9D,C","sources":["webpack://web-gatsby/./src/components/race_list.js","webpack://web-gatsby/./src/pages/today_predict.js"],"sourcesContent":["import React from \"react\"\nimport \"../styles/race_list.css\"\nimport { Link } from \"gatsby\"\n\n\nexport default function RaceList({ post }) {\n    const pageLink = `/today_predict/${post.race_id}/`\n    const area = post.area;\n    const race_info = post.race_no+ 'R ' + post.RaceData01_time;\n    const y_pred_value_max = post.y_pred_value\n\n    let mark = \"\"\n\n    if(y_pred_value_max > 70){\n        mark = \"üê¥\"\n    }\n\n\n    return (\n        <Link to={pageLink} className=\"post-link-anchor\">\n            <div className=\"post-link\">\n                <div className=\"post-link-text\">\n                    <h3>{mark} {area} {race_info} {mark} </h3>\n                </div>\n            </div>\n        </Link>\n    )\n}","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport RaceList from \"../components/race_list\"\nimport { graphql } from \"gatsby\"\n\nexport default function Predict({data}) {\n\n  function formatDate(dt) {\n    dt = new Date(dt)\n    var y = dt.getFullYear();\n    var m = ('00' + (dt.getMonth() + 1)).slice(-2);\n    var d = ('00' + dt.getDate()).slice(-2);\n    return (y + '-' + m + '-' + d);\n  }\n\n  const today = formatDate(new Date());\n\n  function view_link(edge){\n    if (today === edge.node.date){\n      return <RaceList key={edge.node.race_id} post={edge.node} />\n    }\n  }\n\n  return (\n    <Layout>\n      <h2>Êú¨Êó•„ÅÆ‰∫àÊÉ≥</h2>\n        {data.allTodayRaceInfoCsv.edges.map(edge => view_link(edge))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query race_info {\n      allTodayRaceInfoCsv{\n        edges {\n          node {\n            division\n            date\n            RaceData01_time\n            area\n            race_id\n            race_no\n            y_pred_value\n          }\n        }\n      }\n    }\n`"],"names":["RaceList","_ref","post","pageLink","race_id","area","race_info","race_no","RaceData01_time","mark","y_pred_value","React","Link","to","className","Predict","data","today","dt","Date","getFullYear","getMonth","slice","getDate","Layout","allTodayRaceInfoCsv","edges","map","edge","node","date","key","view_link"],"sourceRoot":""}