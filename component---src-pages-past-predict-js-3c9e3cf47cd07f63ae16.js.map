{"version":3,"file":"component---src-pages-past-predict-js-3c9e3cf47cd07f63ae16.js","mappings":"+KAMe,SAASA,EAAQC,GAAmB,IAAlB,KAAEC,EAAI,MAAGC,GAAMF,EAI5C,MAAMG,EAAQ,kBAAqBF,EAAKG,QAAO,IACzCC,EAAOJ,EAAKI,KACZC,EAAYL,EAAKM,QAAS,KAAON,EAAKO,gBAG5C,IAAIC,EAAO,GAOX,OATyBR,EAAKS,aAIR,KAClBD,EAAO,MAKPE,EAAAA,cAAA,WACIA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAIV,GACNQ,EAAAA,cAAA,OAAKG,UAAU,sBACXH,EAAAA,cAAA,WAAMF,EAAK,IAAEJ,EAAK,IAAEC,EAAU,IAAEG,EAAK,OAG5CP,EAAQ,GAAM,EAAIS,EAAAA,cAACI,EAAAA,EAAG,MAAK,KAGxC,C,gHCzBe,SAASC,EAAOhB,GAAU,IAAT,KAACiB,GAAKjB,EAUpC,MAAMkB,GARcC,EAQK,IAAIC,MAP3BD,EAAK,IAAIC,KAAKD,IACHE,cAGC,KAFH,MAAQF,EAAGG,WAAa,IAAIC,OAAO,GAEtB,KADb,KAAOJ,EAAGK,WAAWD,OAAO,IAJvC,IAAoBJ,EASpB,IAAIjB,EAAQ,EASZ,OACES,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAACe,EAAAA,EAAG,CAACC,UAAU,UACbhB,EAAAA,cAAA,UAAI,SACHM,EAAKW,oBAAoBC,MAAMC,KAAIC,GAX1C,SAAmBA,GACjB,GAAIb,IAAUa,EAAKC,KAAKC,KAEtB,OADA/B,GAAgB,EACTS,EAAAA,cAACZ,EAAAA,EAAQ,CAACmC,IAAKH,EAAKC,KAAK5B,QAASH,KAAM8B,EAAKC,KAAM9B,MAAOA,GAErE,CAMkDiC,CAAUJ,KAI9D,C","sources":["webpack://web-gatsby/./src/components/race_list.js","webpack://web-gatsby/./src/pages/past_predict.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n// import { useBreakpoint } from \"gatsby-plugin-breakpoints\"\nimport GAd from '../components/googleAdsense';\n\n\nexport default function RaceList({ post , count}) {\n    // const breakpoints = useBreakpoint();\n    // const count = count\n\n    const pageLink = `/today_predict/${post.race_id}/`\n    const area = post.area;\n    const race_info = post.race_no+ 'R ' + post.RaceData01_time;\n    const y_pred_value_max = post.y_pred_value\n\n    let mark = \"\"\n\n    if(y_pred_value_max > 70){\n        mark = \"üê¥\"\n    }\n\n\n    return (\n        <div>           \n            <Link to={pageLink}>\n                <div className=\"today-predict-list\">\n                    <div>{mark} {area} {race_info} {mark} </div>\n                </div>\n            </Link>\n            {count % 5 === 0 ? <GAd/> : null}\n        </div>\n    )\n}\n\n\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport RaceList from \"../components/race_list\"\nimport { graphql } from \"gatsby\"\nimport Seo from \"../components/seo\"\n\n\nexport default function Predict({data}) {\n\n  function formatDate(dt) {\n    dt = new Date(dt)\n    var y = dt.getFullYear();\n    var m = ('00' + (dt.getMonth() + 1)).slice(-2);\n    var d = ('00' + dt.getDate()).slice(-2);\n    return (y + '-' + m + '-' + d);\n  }\n\n  const today = formatDate(new Date());\n  let count = 0\n\n  function view_link(edge){\n    if (today === edge.node.date){\n      count = count + 1\n      return <RaceList key={edge.node.race_id} post={edge.node} count={count}/>\n    }\n  }\n\n  return (\n    <Layout>\n      <Seo pageTitle=\"ÈÅéÂéª„ÅÆ‰∫àÊÉ≥\"/>\n        <h1>ÈÅéÂéª„ÅÆ‰∫àÊÉ≥</h1>\n        {data.allTodayRaceInfoCsv.edges.map(edge => view_link(edge))}\n\n    </Layout>\n  )\n}\n\n\nexport const query = graphql`\n  query race_info {\n      allTodayRaceInfoCsv{\n        edges {\n          node {\n            division\n            date\n            RaceData01_time\n            area\n            race_id\n            race_no\n            y_pred_value\n          }\n        }\n      }\n    }\n`"],"names":["RaceList","_ref","post","count","pageLink","race_id","area","race_info","race_no","RaceData01_time","mark","y_pred_value","React","Link","to","className","GAd","Predict","data","today","dt","Date","getFullYear","getMonth","slice","getDate","Layout","Seo","pageTitle","allTodayRaceInfoCsv","edges","map","edge","node","date","key","view_link"],"sourceRoot":""}