{"version":3,"file":"component---src-pages-today-predict-js-0b018ea70dc8159df20e.js","mappings":"4LAKe,SAASA,EAAS,GAAW,IAAX,KAAEC,GAAM,EACrC,MAAMC,EAAQ,kBAAqBD,EAAKE,QAAO,IACzCC,EAAOH,EAAKG,KACZC,EAAYJ,EAAKK,QAAS,KAAOL,EAAKM,gBAG5C,IAAIC,EAAO,GAOX,OATyBP,EAAKQ,aAIR,KAClBD,EAAO,MAKP,gBAAC,EAAAE,KAAI,CAACC,GAAIT,EAAUU,UAAU,oBAC1B,uBAAKA,UAAU,aACX,uBAAKA,UAAU,kBACX,0BAAKJ,EAAI,IAAGJ,EAAI,IAAGC,EAAS,IAAGG,EAAI,OAKvD,CCtBe,SAASK,EAAQ,GAAS,IAAT,KAACC,GAAK,EAUpC,MAAMC,GARcC,EAQK,IAAIC,MAP3BD,EAAK,IAAIC,KAAKD,IACHE,cAGC,KAFH,MAAQF,EAAGG,WAAa,IAAIC,OAAO,GAEtB,KADb,KAAOJ,EAAGK,WAAWD,OAAO,IAJvC,IAAoBJ,EAmBpB,OACE,gBAAC,IAAM,KACL,mCACGF,EAAKQ,oBAAoBC,MAAMC,KAAIC,GAZ1C,SAAmBA,GAIjB,GAHAC,QAAQC,IAAIF,EAAKG,KAAKC,MACtBH,QAAQC,IAAIF,EAAKG,KAAKzB,SAElBY,IAAUU,EAAKG,KAAKC,KACtB,OAAO,gBAAC7B,EAAQ,CAAC8B,IAAKL,EAAKG,KAAKzB,QAASF,KAAMwB,EAAKG,MAExD,CAKkDG,CAAUN,KAG9D,C","sources":["webpack://web-gatsby/./src/components/race_list.js","webpack://web-gatsby/./src/pages/today_predict.js"],"sourcesContent":["import React from \"react\"\nimport \"../styles/race_list.css\"\nimport { Link } from \"gatsby\"\n\n\nexport default function RaceList({ post }) {\n    const pageLink = `/today_predict/${post.race_id}/`\n    const area = post.area;\n    const race_info = post.race_no+ 'R ' + post.RaceData01_time;\n    const y_pred_value_max = post.y_pred_value\n\n    let mark = \"\"\n\n    if(y_pred_value_max > 70){\n        mark = \"üê¥\"\n    }\n\n\n    return (\n        <Link to={pageLink} className=\"post-link-anchor\">\n            <div className=\"post-link\">\n                <div className=\"post-link-text\">\n                    <h3>{mark} {area} {race_info} {mark} </h3>\n                </div>\n            </div>\n        </Link>\n    )\n}","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport RaceList from \"../components/race_list\"\nimport { graphql } from \"gatsby\"\n\nexport default function Predict({data}) {\n\n  function formatDate(dt) {\n    dt = new Date(dt)\n    var y = dt.getFullYear();\n    var m = ('00' + (dt.getMonth() + 1)).slice(-2);\n    var d = ('00' + dt.getDate()).slice(-2);\n    return (y + '-' + m + '-' + d);\n  }\n\n  const today = formatDate(new Date());\n\n  function view_link(edge){\n    console.log(edge.node.date)\n    console.log(edge.node.race_id)\n\n    if (today === edge.node.date){\n      return <RaceList key={edge.node.race_id} post={edge.node} />\n    }\n  }\n\n  return (\n    <Layout>\n      <h2>Êú¨Êó•„ÅÆ‰∫àÊÉ≥</h2>\n        {data.allTodayRaceInfoCsv.edges.map(edge => view_link(edge))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query race_info {\n      allTodayRaceInfoCsv{\n        edges {\n          node {\n            division\n            date\n            RaceData01_time\n            area\n            race_id\n            race_no\n            y_pred_value\n          }\n        }\n      }\n    }\n`"],"names":["RaceList","post","pageLink","race_id","area","race_info","race_no","RaceData01_time","mark","y_pred_value","Link","to","className","Predict","data","today","dt","Date","getFullYear","getMonth","slice","getDate","allTodayRaceInfoCsv","edges","map","edge","console","log","node","date","key","view_link"],"sourceRoot":""}