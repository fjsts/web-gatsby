{"version":3,"file":"component---src-pages-today-predict-forcus-js-b77c5d9411969ec98b98.js","mappings":"kLAMe,SAASA,EAAK,GAAW,IAAX,KAAEC,GAAM,EACnC,OACE,gBAAC,IAAM,KAEL,oCACA,qBAAGC,UAAU,iBAAe,QAC3BC,EAAYF,EAAKG,mBAAoB,UACtC,qBAAGF,UAAU,iBAAe,QAC3BC,EAAYF,EAAKG,mBAAoB,UAG5C,CAGA,SAASD,EAAYF,EAAMI,GACzB,IAAIC,EAAM,GACNC,EAAQ,EAUZ,MAAMC,GARcC,EAQK,IAAIC,MAP3BD,EAAK,IAAIC,KAAKD,IACHE,cAGC,KAFH,MAAQF,EAAGG,WAAa,IAAIC,OAAO,GAEtB,KADb,KAAOJ,EAAGK,WAAWD,OAAO,IAJvC,IAAoBJ,EA+CpB,OApCAR,EAAKc,MAAMC,SAAQ,SAAUC,GACvBA,EAAKC,KAAKC,aAAe,IACvBF,EAAKC,KAAKE,OAASZ,GACjBS,EAAKC,KAAKb,WAAaA,IACzBE,GAAgB,EAChBD,EAAIe,KACF,sBAAIC,IAAKL,EAAKC,KAAKK,IACjB,sBAAIC,MAAM,OAAQP,EAAKC,KAAKO,KAAI,IAAGR,EAAKC,KAAKQ,QAAO,KACpD,sBAAIF,MAAM,OAAQP,EAAKC,KAAKS,gBAAgBC,QAAQ,KAAM,KAC1D,sBAAIJ,MAAM,OAAQP,EAAKC,KAAKW,QAC5B,sBAAIL,MAAM,OAAQP,EAAKC,KAAKY,cAMxC,IAEExB,EADY,IAAVC,EACI,qBAAGwB,MAAM,UAAQ,iBAGrB,yBAAO7B,UAAU,WACf,6BACE,0BACE,iCACA,gCACA,gCACA,kCAGJ,6BACGI,IAKFA,CACT,C","sources":["webpack://web-gatsby/./src/pages/today_predict_forcus.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport { graphql } from \"gatsby\"\nimport \"../styles/today_predict_forcus.css\"\n\n\nexport default function Home({ data }) {\n  return (\n    <Layout>\n      {/* <SEO title=\"title\" description=\"description\" /> */}\n      <h2>本日の狙い目</h2>\n      <p className=\"center_region\">中央競馬</p>\n      {getRaceData(data.allTodayPredictCsv, 'center')}\n      <p className=\"center_region\">地方競馬</p>\n      {getRaceData(data.allTodayPredictCsv, 'region')}\n    </Layout>\n  )\n}\n\n\nfunction getRaceData(data, division) {\n  let ret = [];\n  let count = 0;\n\n  function formatDate(dt) {\n    dt = new Date(dt)\n    var y = dt.getFullYear();\n    var m = ('00' + (dt.getMonth() + 1)).slice(-2);\n    var d = ('00' + dt.getDate()).slice(-2);\n    return (y + '-' + m + '-' + d);\n  }\n\n  const today = formatDate(new Date());\n\n\n  data.edges.forEach(function (item) {\n    if (item.node.y_pred_value > 70) {\n      if (item.node.date === today) {\n        if (item.node.division === division) {\n          count = count + 1\n          ret.push(\n            <tr key={item.node.id}>\n              <td width=\"20%\" >{item.node.area} {item.node.race_no}R</td>\n              <td width=\"20%\" >{item.node.RaceData01_time.replace(\"発走\", \"\")}</td>\n              <td width=\"10%\" >{item.node.umaban}</td>\n              <td width=\"50%\" >{item.node.horse_name}</td>\n            </tr>\n          )\n        }\n      }\n    }\n  })\n  if (count === 0) {\n    ret = <p align=\"center\">該当のレースがありません。</p>\n  } else {\n    ret = (\n      <table className=\"predict\">\n        <thead>\n          <tr>\n            <th>レース</th>\n            <th>出走</th>\n            <th>馬番</th>\n            <th>馬名</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ret}\n        </tbody>\n      </table>\n    )\n  }\n  return ret;\n}\n\n\nexport const pageQuery = graphql`\n  query {\n    allTodayPredictCsv{\n      edges {\n        node {\n          id\n          division\n          RaceData01_time\n          date\n          area\n          race_no\n          umaban\n          horse_name\n          y_pred_value\n        }\n      }\n    }\n}\n`"],"names":["Home","data","className","getRaceData","allTodayPredictCsv","division","ret","count","today","dt","Date","getFullYear","getMonth","slice","getDate","edges","forEach","item","node","y_pred_value","date","push","key","id","width","area","race_no","RaceData01_time","replace","umaban","horse_name","align"],"sourceRoot":""}