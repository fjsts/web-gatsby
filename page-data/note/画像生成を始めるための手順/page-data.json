{"componentChunkName":"component---src-templates-post-markdown-js","path":"/note/画像生成を始めるための手順/","result":{"data":{"markdownRemark":{"html":"<h2>1. プロンプトの詳細な記述</h2>\n<p>プロンプトは画像の内容を最大限詳細に記述します。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">白黒の子猫がソファの上で丸くなって眠っている。光が差し込んでいる。リアルでクオリティの高い画像。</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>子猫の毛色、起きている状態、光の加減など細かい要素を指定する。</li>\n<li>画質に関する指示も含める。</li>\n</ul>\n<h2>2. テンプレートプロンプト</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{人物}が{行為}をしているリアルな画像</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>中括弧{}で変数を設定し、繰り返し使えるテンプレートを作成。</li>\n</ul>\n<h2>3. ネガティブプロンプト</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{内容}, low qualityではない, cartoonではない</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>画像に含めたくない要素を否定形式で指定する。</li>\n</ul>\n<h2>4. 設定ファイル</h2>\n<p>config.yaml:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">image_size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">512</span>\r\n<span class=\"token key atrule\">batchSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> \r\n<span class=\"token punctuation\">...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>画像サイズ、バッチサイズなどのパラメータを設定。</li>\n</ul>\n<h2>5. GPUの指定</h2>\n<p>launch.py:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">-</span><span class=\"token operator\">-</span>gpu <span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>config.yaml:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yaml line-numbers\"><code class=\"language-yaml\"><span class=\"token key atrule\">device</span><span class=\"token punctuation\">:</span> cuda<span class=\"token punctuation\">:</span><span class=\"token number\">0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>第一GPUを使うよう指定。</li>\n</ul>\n<h2>6. 画像の保存</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> diffusers <span class=\"token keyword\">import</span> ImagePipeline\r\n\r\nimage <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>prompt<span class=\"token punctuation\">)</span> \r\n\r\nImagePipeline<span class=\"token punctuation\">.</span>save_image<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cat.png\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>ImagePipelineを使って画像を保存。</li>\n</ul>\n<h2>7. ハイパラメータ調整</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">guidance_scale: 7.5 \r\nnum_inference_steps: 50</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<ul>\n<li>学習率、イテレーション回数などを調整。</li>\n</ul>\n<p>このように実際のコード例も合わせることで、Stable Diffusionの利用がよりイメージしやすくなると思います。</p>","frontmatter":{"title":"画像生成を始めるための手順"}}},"pageContext":{"id":"22144358-f71f-50ec-8609-97c4febb8466"}},"staticQueryHashes":["1251307220","3177572103","772138545"],"slicesMap":{}}