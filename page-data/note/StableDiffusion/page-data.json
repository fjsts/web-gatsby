{"componentChunkName":"component---src-templates-select-note-js","path":"/note/StableDiffusion/","result":{"data":{"postsRemark":{"edges":[{"node":{"id":"22144358-f71f-50ec-8609-97c4febb8466","rawMarkdownBody":"\r\n## 1. プロンプトの詳細な記述\r\n\r\nプロンプトは画像の内容を最大限詳細に記述します。\r\n\r\n```\r\n白黒の子猫がソファの上で丸くなって眠っている。光が差し込んでいる。リアルでクオリティの高い画像。\r\n```\r\n\r\n- 子猫の毛色、起きている状態、光の加減など細かい要素を指定する。\r\n- 画質に関する指示も含める。\r\n\r\n## 2. テンプレートプロンプト\r\n\r\n```\r\n{人物}が{行為}をしているリアルな画像\r\n```\r\n\r\n- 中括弧{}で変数を設定し、繰り返し使えるテンプレートを作成。\r\n\r\n## 3. ネガティブプロンプト\r\n\r\n```\r\n{内容}, low qualityではない, cartoonではない\r\n``` \r\n\r\n- 画像に含めたくない要素を否定形式で指定する。\r\n\r\n## 4. 設定ファイル\r\n\r\nconfig.yaml:\r\n\r\n```yaml\r\nimage_size: 512\r\nbatchSize: 1 \r\n...\r\n```\r\n\r\n- 画像サイズ、バッチサイズなどのパラメータを設定。\r\n\r\n## 5. GPUの指定\r\n\r\nlaunch.py:\r\n\r\n```python\r\n--gpu 0\r\n```\r\n\r\nconfig.yaml:\r\n\r\n```yaml \r\ndevice: cuda:0\r\n```\r\n\r\n- 第一GPUを使うよう指定。\r\n\r\n## 6. 画像の保存\r\n\r\n```python\r\nfrom diffusers import ImagePipeline\r\n\r\nimage = model.decode(prompt) \r\n\r\nImagePipeline.save_image(image, \"cat.png\")\r\n```\r\n\r\n- ImagePipelineを使って画像を保存。\r\n\r\n## 7. ハイパラメータ調整\r\n\r\n```\r\nguidance_scale: 7.5 \r\nnum_inference_steps: 50\r\n``` \r\n\r\n- 学習率、イテレーション回数などを調整。\r\n\r\nこのように実際のコード例も合わせることで、Stable Diffusionの利用がよりイメージしやすくなると思います。","frontmatter":{"title":"画像生成を始めるための手順","tags":["AI","Python","StableDiffusion"],"update":"2023/09/03"}}},{"node":{"id":"92c08cb7-9ae8-5394-be4a-382e7e85b842","rawMarkdownBody":"\r\n\r\nStable Diffusionは、テキストのプロンプトから高品質な画像を生成できる最新のAIです。本記事では、Stable Diffusionをローカルマシンに構築する方法を紹介します。\r\n\r\n## メリット\r\n\r\nStable Diffusionをローカルで構築するメリットは以下の通りです。\r\n\r\n- プライバシー保護 - クラウドサービスを使わずローカルで完結するため、個人情報が外部に漏れるリスクが低減します。\r\n\r\n- コスト削減 - クラウドサービスの利用料金がかからないためコストを大幅に抑えられます。\r\n\r\n- カスタマイズが容易 - ローカルなら設定を自由に変更でき、学習データやハイパラメータの調整が簡単です。\r\n\r\n## 必要な環境\r\n\r\nローカルでStable Diffusionを動かすには、以下のようなマシンスペックが必要です。\r\n\r\n- GPU: NVIDIA RTXシリーズ等の高性能GPU\r\n- CPU: Intel Core i7等の高速マルチコアCPU\r\n- RAM: 16GB以上 \r\n- ストレージ: 10GB以上の空き容量\r\n\r\nソフトウェア環境としては以下が必要です。\r\n\r\n- Python 3.7以上\r\n- PyTorch 1.7以上  \r\n- CUDA Toolkit\r\n- cuDNN\r\n- Docker\r\n\r\n## インストール手順\r\n\r\n## 1. 必要なソフトウェアのインストール\r\n\r\n- Pythonの最新安定版をインストール\r\n- PyTorchをpipでインストール\r\n- NVIDIAサイトからCUDA ToolkitとcuDNNをダウンロード\r\n- Dockerをインストール\r\n\r\n## 2. 学習済みモデルのダウンロード\r\n\r\n- diffusersライブラリを使ってモデルをダウンロード\r\n\r\n```\r\ngit clone https://github.com/huggingface/diffusers.git\r\ncd diffusers\r\npip install -e .\r\n```\r\n\r\n## 3. Stable Diffusionリポジトリのクローン\r\n\r\n- git clone コマンドでリポジトリをクローン\r\n\r\n```\r\ngit clone https://github.com/CompVis/stable-diffusion.git\r\n```\r\n\r\n## 4. config.yamlの設定変更\r\n\r\n- 画像サイズ等の設定を必要に応じて変更\r\n\r\n## 5. ローンチャースクリプトで起動\r\n\r\nこのように、順を追ってインストールしていけばローカルでの構築はできますが、設定次第でエラーが発生することもあります。トラブルシューティングのためにも、各手順の理解とバージョン確認が大切です。\r\n\r\nStable Diffusionを使えるようになれば、プライベートな環境で好きなようにテキストから画像生成を楽しむことができます。ローカル構築には多少の手間は掛かりますが、カスタマイズの自由度が高くなるのでオススメです。\r\n\r\n以上、Stable Diffusionのローカル構築方法でした。実際に設定していく過程で分からないことがあれば、公式ドキュメントやフォーラムを参考にしてください。\r\n","frontmatter":{"title":"StableDiffusionをローカルに構築する","tags":["AI","Python","StableDiffusion"],"update":"2023/08/13"}}}]}},"pageContext":{"tag":"StableDiffusion"}},"staticQueryHashes":["1251307220","3177572103","772138545"],"slicesMap":{}}