{"componentChunkName":"component---src-templates-post-markdown-js","path":"/note/パラメータチューニング/","result":{"data":{"markdownRemark":{"html":"<p>前回の記事では、特徴量エンジニアリングとモデル構築の手順を解説しました。今回は、モデルの評価とパラメータチューニングについて詳しく見ていきましょう。</p>\n<p>まずは、モデルの評価です。競馬予想では、正解率（Accuracy）以外にもさまざまな評価指標が存在します。例えば、適合率（Precision）、再現率（Recall）、F1スコア（F1-Score）などがあります。以下のコードでは、これらの評価指標を計算しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> precision_score<span class=\"token punctuation\">,</span> recall_score<span class=\"token punctuation\">,</span> f1_score\r\n\r\n<span class=\"token comment\"># 適合率の計算</span>\r\nprecision <span class=\"token operator\">=</span> precision_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Precision:\"</span><span class=\"token punctuation\">,</span> precision<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 再現率の計算</span>\r\nrecall <span class=\"token operator\">=</span> recall_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Recall:\"</span><span class=\"token punctuation\">,</span> recall<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># F1スコアの計算</span>\r\nf1 <span class=\"token operator\">=</span> f1_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"F1-Score:\"</span><span class=\"token punctuation\">,</span> f1<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>上記のコードでは、<code class=\"language-text\">precision_score</code>、<code class=\"language-text\">recall_score</code>、<code class=\"language-text\">f1_score</code>関数を使用して、それぞれの評価指標を計算しています。これにより、モデルの予測性能をより詳細に評価することができます。</p>\n<p>次に、パラメータチューニングについてです。モデルのパフォーマンスを最大化するためには、適切なハイパーパラメータの設定が重要です。LightGBMでは、学習率、木の深さ、サンプリング率などのパラメータが調整可能です。</p>\n<p>以下のコードでは、GridSearchCVを使ってグリッドサーチによるパラメータチューニングを行っています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> GridSearchCV\r\n\r\n<span class=\"token comment\"># パラメータグリッドの設定</span>\r\nparam_grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">'learning_rate'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'max_depth'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token string\">'subsample'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\"># グリッドサーチの実行</span>\r\ngrid_search <span class=\"token operator\">=</span> GridSearchCV<span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> param_grid<span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\ngrid_search<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 最適なパラメータとスコアの表示</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Best Parameters:\"</span><span class=\"token punctuation\">,</span> grid_search<span class=\"token punctuation\">.</span>best_params_<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Best Score:\"</span><span class=\"token punctuation\">,</span> grid_search<span class=\"token punctuation\">.</span>best_score_<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>上記のコードでは、<code class=\"language-text\">param_grid</code>で指定したパラメータの組み合わせに対して、交差検証を行い最適なパラメータを選択します。<code class=\"language-text\">GridSearchCV</code>クラスを用いてモデルとパラメータグリッドを指定し、<code class=\"language-text\">scoring</code>引数に評価指標を指定しています。</p>\n<p><code class=\"language-text\">fit</code>メソッドを呼び出すことでグリッドサーチが実行され、最適なパラメータとそのときのスコアが表示されます。この最適なパラメータを使ってモデルを再構築し、さらなる予測精度の向上を図ることができます。</p>\n<p>以上がモデルの評価とパラメータチューニングの手順です。適切な評価とパラメータの調整を行うことで、競馬予想システムの性能を高めることができます。次回の記事では、実際のレースデータを用いて予測を行い、結果の解析と改善方法について考察していきます。</p>","frontmatter":{"title":"パラメータチューニング"}}},"pageContext":{"id":"e3bdad9d-4961-5f30-9be4-cbba403c5c90"}},"staticQueryHashes":["1251307220","3177572103","772138545"],"slicesMap":{}}